name: üêç ‚Ä¢ Packaging

on:
  workflow_call:
    inputs:
      package-name:
        description: "The name of the Python package"
        required: true
        type: string

jobs:
  build_sdist:
    name: üì¶ SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Build SDist
        run: pipx run build --sdist
      - name: Check metadata
        run: pipx run twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: üé° ${{ matrix.runs-on }} ${{ matrix.python }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-11, windows-latest]
        python: ["cp38", "cp39", "cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: ilammy/msvc-dev-cmd@v1
      - if: matrix.os != 'ubuntu-latest'
        name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc
          override_cache_key: wheels-${{ matrix.runs-on }}-${{ matrix.python }}
      - uses: pypa/cibuildwheel@v2.15
        env:
          CIBW_BUILD: ${{ matrix.python }}-*
      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_wheels_emulation:
    name: üé° ${{ matrix.arch }} ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: ["s390x", "ppc64le"]
        python: ["cp38", "cp39", "cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.python }}-*
          CIBW_TEST_SKIP: "cp*"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  deploy:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: üöÄ Deploy to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ inputs.package-name }}
    permissions:
      id-token: write
    needs: [build_wheels, build_sdist, build_wheels_emulation]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
